name: CI

on: [push]

env:
  BUILD_TYPE: release

jobs:
  build-windows:
    name: windows build
    runs-on: windows-latest
    steps:
      - name: Install NSIS
        shell: powershell
        run: |
          Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
          xmake --version
      - uses: actions/checkout@v4
      - name: pre-repo
        shell: powershell
        run: |
          $env:path+=";C:\Users\$($env:username)\xmake"
          mkdir -p dist
      - name: build
        shell: powershell
        run: |
          $env:path+=";C:\Users\$($env:username)\xmake"
          xmake f -c -y --example=y
          xmake build example
          xmake build example_d3d11
          xmake build example_gles
          cp ./build/windows/x64/release/example.exe ./dist/
          cp ./build/windows/x64/release/example_d3d11.exe ./dist/
          cp ./build/windows/x64/release/example_gles.exe ./dist/
      - uses: actions/upload-artifact@v4
        with:
          name: windows-${{ github.run_id }}
          path: |
            dist/example.exe
            dist/example_d3d11.exe
            dist/example_gles.exe
  build-osx:
    name: macos build
    runs-on: macos-latest
    steps:
      - name: install-xmake
        run: |
          brew install xmake
          xmake --version
      - uses: actions/checkout@v4
      - name: pre-repo
        run: |
          mkdir -p dist
      - name: build
        run: |
          xmake f -c -y --example=y
          xmake build example
          xmake build example_metal
          xmake build example_gles
          cp ./build/macosx/x86_64/release/example ./dist/
          cp ./build/macosx/x86_64/release/example_metal ./dist/
          cp ./build/macosx/x86_64/release/example_gles ./dist/
      - uses: actions/upload-artifact@v4
        with:
          name: osx-${{ github.run_id }}
          path: |
            dist/example
            dist/example_metal
            dist/example_gles
  build-linux:
    name: linux build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: install-xmake
        run: |
          sudo apt-get install libglfw3-dev tree
          ./scripts/xmake-install.sh xmake-amd64.deb
          sudo apt-get install -y ./xmake-amd64.deb
          rm ./xmake-amd64.deb
          xmake --version
      - name: pre-repo
        run: |
          mkdir -p dist
      - name: build
        run: |
          xmake f -c -y --example=y
          xmake build example
          xmake build example_gles
          cp ./build/linux/x86_64/release/example ./dist/
          cp ./build/linux/x86_64/release/example_gles ./dist/
      - name: cert
        env:
          CERT_TEXT: ${{ secrets.CERT_TEXT }}
        run: |
          cd project/android
          echo "org.gradle.java.home=$JAVA_HOME_11_X64" >> gradle.properties
          echo $CERT_TEXT > cert.txt
          cat cert.txt | base64 -d > cert.tar.xz
          tar -xf cert.tar.xz
          rm cert.tar.xz cert.txt
          ls -lh keystore.properties release.keystore
          cd ../../
      - name: build-arm-so
        run: |
          xmake f -p android -a armeabi-v7a --ndk_sdkver=21 --ndk=${ANDROID_NDK} -y -c --example=y
          xmake build example_gles
      - name: build-arm64-so
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          xmake f -p android -a arm64-v8a --ndk_sdkver=21 --ndk=${ANDROID_NDK} -y -c --example=y
          xmake build example_gles
      - name: build-apk
        run: |
          export JAVA_HOME=$JAVA_HOME_11_X64
          cd project/android
          ./gradlew assembleDebug
          cp ./app/build/outputs/apk/debug/app-debug.apk ../../dist/app.apk
          cd -
      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ github.run_id }}
          path: |
            dist/app.apk
            dist/example
            dist/example_gles
